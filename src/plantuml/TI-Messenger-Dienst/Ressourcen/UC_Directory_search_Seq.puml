/' 
# TI-Messenger 1.1
# TI-Messenger-Dienst
# Sequence Diagram
# Name: Einträge im VZD-FHIR-Directory suchen
'/

@startuml
skinparam sequenceMessageAlign direction
skinparam minClassWidth 200
skinparam BoxPadding 1
skinparam sequenceReferenceHeaderBackgroundColor palegreen
scale max 2048 width

skinparam sequence {
ArrowColor black
ArrowFontSize 17
ActorBorderColor black
LifeLineBorderColor black
LifeLineBackgroundColor Gainsboro

ParticipantBorderColor Motivation
ParticipantBackgroundColor Motivation
ParticipantFontName Impact
ParticipantFontSize 20
ParticipantFontColor black
ParticipantBorderColor Black
ParticipantBackgroundColor MOTIVATION

ActorBackgroundColor Gainsboro
ActorFontColor black
ActorFontSize 20
ActorFontName Aapex
}
    actor U as "Akteur in der Rolle\nUser / User-HBA"
    participant cl as "TI-Messenger-Client"
    participant mp as "Messenger Proxy"
    participant hs as "Matrix-Homeserver"
    box <size:18>VZD-FHIR-Directory</size> #WhiteSmoke
      participant fp as "FHIR-Proxy"
      participant pp as "PASSporT-\nService"
      participant au as "Auth-Service"
      participant fd as "FHIR-Directory"
    end box

|||
note over U, hs: \n<size:17>Der Akteur ist erfolgreich beim Messenger-Service angemeldet</size>\n
|||

      activate cl
    U->cl:Suchparameter für \nFHIR-Ressourcen \n eingeben
    cl->cl: prüfe ob noch gültiges \ntim-search-accesstoken\nvorliegt

|||
alt#LightGrey #AliceBlue <size:16>kein gültiges tim-search-accesstoken vorhanden</size>
|||
      

    cl->mp: GET /_matrix/client/user/\n{userId}/openid/request_token 
      activate mp
    mp->hs: HTTP Forward 

      activate hs
    |||
    hs-->mp: Matrix-OpenID-Token
      deactivate hs
    mp-->cl: HTTP(S) Forward
      deactivate mp
      
    |||
    cl->au: GET /tim-authenticate... (Auth Header mit Matrix-OpenID-Token)
      activate au
    au->au: Prüfe ob \nMatrix-Domain aus dem \nMatrix-OpenID-Token in \nFöderation enthalten ist

|||
alt#LightGrey #LightBlue <size:16>Matrix-Domain nicht in der Föderation enthalten</size>
|||    

    au-->cl: HTTP 401 \nUnauthorized
    cl->cl: Session beenden
    cl-->U: Suche nicht erfolgreich
    
    |||
    else <size:16>matrix_server_name in der Föderation enthalten</size>
    |||
        au->mp: GET /openid/userinfo/?Matrix-OpenID-Token)
          activate mp
        mp->hs: HTTP(S) Forward
          activate hs
        hs->hs: prüfe Matrix-OpenID-Token
        hs-->mp: MXID des Nutzers
          deactivate hs
        mp-->au: HTTP(S) Forward
          deactivate mp
        au->au: erzeuge \ntim-search-accesstoken 
        au-->cl: tim-search-accesstoken (inklusive MXID des Nutzers)
          deactivate au
          deactivate fp
    |||
    end
end

    |||
    cl->fp: GET /tim-search?... (Auth Header mit tim-search-accesstoken inkl. MXID)
    |||
      activate fp
    fp->fp: prüfe tim-search-accesstoken
    |||
    opt#LightGrey #MistyRose <size:16>Abbruch</size>
      fp-->cl: kein gültiges tim-search-accesstoken 
    |||
    end
   
|||
alt#LightGrey #AliceBlue <size:16>HealthcareService-Einträge werden gesucht</size>
|||
    fp->fd: POST /tim-search/HealthcareService/? \nFinde Datensatz für TelematikID 
      activate fd
    fd-->fp: Result Body json
      deactivate fd
|||
end

|||
alt#LightGrey #AliceBlue <size:16>PractitionerRole-Einträge werden gesucht</size>
|||
    fp->fd: POST /tim-search/PractitionerRole/? ...<MXID des anfragenden Nutzers> 
      activate fd
    fd->fd: Prüfung, ob MXID im \nTIEndpoint-Eintrag \nvorhanden ist
    fd-->fp: Result Body json mit TIPractitioner-Eintrag
      deactivate fd
|||
end
|||

  fp->fp: MXID enthalten und \nTIEndpoint.status == active
  |||
  opt#LightGrey #MistyRose <size:16>Abbruch</size>
    fp-->cl: kein passender Eintrag gefunden \noder TIEndpoint.status == false
    |||
  end
  |||
  fp->pp: Request \nerzeuge PASSporT (MXIDs...)
    activate pp
  pp->pp: Erzeuge PASSporT \n(Attribut orig, dest)
  pp-->fp: /?PASSporT=[PASSporT-String].
    deactivate pp
  fp-->cl: MXID des gesuchten Akteurs und PASSporT
   |||
    deactivate fp
    deactivate cl

@enduml
